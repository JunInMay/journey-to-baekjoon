# 제곱수의 합
"""
어떤 자연수 N은 그보다 작거나 같은 제곱수들의 합으로 나타낼 수 있다.
예를 들어 11=32+12+12(3개 항)이다. 이런 표현방법은 여러 가지가 될 수 있는데,
11의 경우 11=22+22+12+12+12(5개 항)도 가능하다.
이 경우, 수학자 숌크라테스는 “11은 3개 항의 제곱수 합으로 표현할 수 있다.”라고 말한다.
또한 11은 그보다 적은 항의 제곱수 합으로 표현할 수 없으므로, 11을 그 합으로써 표현할 수 있는 제곱수 항의 최소 개수는 3이다.

주어진 자연수 N을 이렇게 제곱수들의 합으로 표현할 때에 그 항의 최소개수를 구하는 프로그램을 작성하시오.
"""
"""
진짜 할 수만 있다면 여기에 진짜 ... 욕 시원하게 적고싶다.
파이썬 현타가 온다.
백준 채점하는데 너무 억울하다.
밑 코드에서 level*level을 원래는..level**2로 표현했다. square, 즉 제곱을 말이다.
2**2 = 4니까...
3**3 = 9이고 말이다...
...
그런데
level**2로 하면 어떤 부분을 고쳐도 시간초과라며 통과가 안된다.
로직은 완전하게 똑같고 코드도 완전하게 똑같은데 말이다.
내가 모르나 싶어서 구글링도 해봤다. 다른 사람들과 코드를 비교해봤다. 아무리 봐도 로직은 똑같았다.
너무 상심해서 이것저것 다 바꿔봤다.
변수명이 길어서 코드 실행이 느린가?
memoization용 배열이 너무 긴가?
쓸데없는 반복이나 분기는 없는지?...
문제는 그런게 아니었다.
level**2로 하면 level*level보다 느렸던 거였다.
2^2보다 2*2가 더 빠르댄다.
3^2보다 3*3이 더 빠르고.
이것때문에 40분을 끙끙댔다는게 너무 화가난다.
로직이 틀렸거나, 하다못해 코드에 에러가 있었으면, 오타가 있었으면 이렇게 억울하진 않았을 것 같다.
고작 언어의 이딴 구조적인 문제 때문에 시간도 버리고 스트레스도 받는게 너무 화가 난다.
파이썬같은 느린 언어는 조만간 버리고, C++ 및 자바, javascript로 갈아탈 것이다.
PS용은 C++, 서버개발은 자바 or javascript.
"""
import sys
import math
n = int(sys.stdin.readline().rstrip())

memo = [_ for _ in range(100001)]

for i in range(1, n+1):
    for level in range(1, math.floor(i ** (1/2))+1):
        if memo[i - level*level] < memo[i]:
            memo[i] = memo[i - level*level] + 1

print(memo[n])